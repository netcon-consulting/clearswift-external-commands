{
    "Check custom": {
        "media_types": {
            "SMTP": [ "not_protected" ]
        },
        "parameters": "%FILENAME% %LOGNAME% \"Config - Check custom\" \"%ITEMTYPE%\"",
        "return_codes": {
            "0": { "action": "NONE", "description": "Not detected" },
            "1": { "action": "DETECTED", "description": "Detected (%LOGTEXT%)" },
            "99": { "action": "NOT_CHECKED", "description": "Error (%LOGTEXT%)" }
        },
        "config": {
            "check_function": { "type": "string", "description": "Python3 code defining custom function 'check_email'", "value": "\"\\nimport re\\n\\ndef check_email(email, log):\\n    \\\"\\\"\\\"\\n    Detect emails from IP 1.2.3.4 with subject header not matching regex '^Invoice \\d{10}$'\\n    \\\"\\\"\\\"\\n\\n    if \\\"Received\\\" in email:\\n        header_received = email.get(\\\"Received\\\").replace(\\\"\\\n\\\", \\\"\\\")\\n\\n        match = re.search(r\\\"from \\S+ \\(([^]]+)\\) by \\\", header_received)\\n\\n        if match is not None:\\n            if match.group(1) == \\\"1.2.3.4\\\":\\n                if \\\"Subject\\\" in email:\\n                    header_subject = str(email.get(\\\"Subject\\\")).replace(\\\"\\\n\\\", \\\"\\\").strip()\\n\\n                    if re.search(r\\\"^Invoice \\d{10}$\\\", header_subject) is None:\\n                        write_log(log, \\\"Invalid subject header\\\")\\n\\n                        return ReturnCode.DETECTED\\n                else:\\n                    write_log(log, \\\"No subject header\\\")\\n\\n                    return ReturnCode.DETECTED\\n\\n    return ReturnCode.NOT_DETECTED\\n\"" }
        }
    }
}
